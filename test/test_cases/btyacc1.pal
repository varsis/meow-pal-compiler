{37, 43, 45}
{
	Cmput 415 - Team YACC
	1.pal
	Testing lexor for valid ids, comments, and string handling
	Errors:
		- unmatches comment brace, line 37
		- multiline string, line 43
		- EOF inside a block comment, line 45
}
program testLex1(in, out);

var
	{ We first insure that IDs can be of an acceptable format }
	someVar : integer;
	s0m3VVVar : char;
	s33909lkja98328uKJDF : integer;
	X7f2c9XxXZzZ : KDkdKDkd91KD91KD;
	myStr : String;
begin
	myStr := 'This is a perfectly valid string.';
	myStr := 'As is this!';
	myStr := 'If \' we \' escape \' we\'re okay';
	myStr := 'We can even do a bunch of \n this\t\n\t\n;aldksfja;ldskjf';
	myStr := 'We can put almost @#$%^&*( whatever (">?{>"?"{ we want';
	myStr := 'INS!DE 4 57|2!||G 8==========D';

	{ C0MM3NT5 |2 n347 o|AT \/\/4Y 2+_)+__)*)((*%$#^%#%^&*()P{:">?>ML:K}
	{ Da remix: $@#%$#^$|":>:<XC>ZSAsdsfdSDWSERGF@$#@#@#TYUHGUYGYU}
	{
	{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{
	{{{{{{{{{{{{{{{{THIS IS ALL ONE VALID COMMENT{{{{{{{{{{{{{{{{{{{
	{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{
	{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{
	{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{THAT ENDS HERE --->}

	} // Error: unmatches comment brace

	myStr := 'Strings	can	have	tabs';
	myStr := 'But we can\'t
	have
	multiline
	string :('; 	//Error: multiline string

end.	{ As the last error, we present to you an EOF inside a block comment