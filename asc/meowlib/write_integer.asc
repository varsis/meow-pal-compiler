################################################################################
# ml_write_integer(i) writes given integer i
################################################################################
ml_write_integer

		ADJUST	1		# local var: rest

# if i < 0, write a '-' char
		PUSH	-3[0]	
		CONSTI	0
		LTI
		IFZ		if_integer_pos
		CONSTI	45
		WRITEC

# i = -i
		PUSH	-3[0]	
		CONSTI	-1
		MULI
		POP		-3[0]	

if_integer_pos

# recursively write larger digits first
# rest = i div 10
		PUSH	-3[0]	# i
		CONSTI	10
		DIVI
		POP		1[0]	# rest
# if rest > 0, write them first
		PUSH	1[0]	# rest
		IFNZ	write_larger_digits
		GOTO	write_current_digit
write_larger_digits
		PUSH	1[0]	# rest
		call	0, ml_write_integer
		ADJUST	-1
write_current_digit
# last digit = i mod 10
		PUSH	-3[0]	# i
		CONSTI	10
		MOD
# add 48 to get ascii character value
		CONSTI 	48
		ADDI
		WRITEC

		ADJUST	-1
		RET	0
