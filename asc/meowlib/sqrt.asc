################################################################################
# sqrt(x) - returns the sqrt of x using the Bakshali Approximation
################################################################################

# Test
#	READR
#	CALL	0, ml_sqrt
#	!D
#	STOP

ml_sqrt
	# Bakshali Method
	# d = x - N^2, where N^2 is the nearest square of x
	# P = d / (2N)
	# A = N + P
	# sqrt(x) is approximately A - (P^2)/(2A) 

	# N, d, P, A, respectively
	ADJUST 	4

	# if (x < 0) print "Sqrt: Argument cannot be negative."
	CONSTR	0.0
	PUSH 	-3[0]
	LTR
	IFZ	ml_sqrt_error

	# N = 0
	CONSTR	0.0	
	POP	0[0]

ml_sqrt_loop
	# while ( (N*N) <= x)
	PUSH	0[0]
	PUSH	0[0]
	MULR
	PUSH	-3[0]
	GTR	
	NOT
	IFZ	ml_sqrt_calc	

	# N++
	CONSTR	1.0
	PUSH	0[0]
	ADDR
	POP	0[0]
	GOTO	ml_sqrt_loop	

ml_sqrt_calc
	# N--
	PUSH	0[0]
	CONSTR	1
	SUBR
	POP	0[0]

	# d = x - (N*N)
	PUSH	-3[0]
	PUSH	0[0]
	PUSH	0[0]
	MULR
	SUBR
	POP	1[0]

	# P = d / (2*N)
	PUSH	1[0]
	CONSTR	2.0
	PUSH	0[0]
	MULR
	DIVR
	POP	2[0]

	# A = N + P
	PUSH	0[0]
	PUSH	2[0]
	ADDR
	POP	3[0]

	# Results = A - ( (P*P) / (2*A) )
	# A
	PUSH	3[0]
	# P * P
	PUSH	2[0]
	PUSH	2[0]
	MULR
	# 2 * A
	CONSTR	2.0
	PUSH	3[0]
	MULR
	# (P*P) / (2*A)
	DIVR
	# Results = A - ( (P*P) / (2*A) )
	SUBR
	POP	-3[0]

	GOTO	ml_sqrt_done
ml_sqrt_error
	CONSTI 83
	WRITEC
	CONSTI 113
	WRITEC
	CONSTI 114
	WRITEC
	CONSTI 116
	WRITEC
	CONSTI 58
	WRITEC
	CONSTI 32
	WRITEC
	CONSTI 65
	WRITEC
	CONSTI 114
	WRITEC
	CONSTI 103
	WRITEC
	CONSTI 117
	WRITEC
	CONSTI 109
	WRITEC
	CONSTI 101
	WRITEC
	CONSTI 110
	WRITEC
	CONSTI 116
	WRITEC
	CONSTI 32
	WRITEC
	CONSTI 99
	WRITEC
	CONSTI 97
	WRITEC
	CONSTI 110
	WRITEC
	CONSTI 110
	WRITEC
	CONSTI 111
	WRITEC
	CONSTI 116
	WRITEC
	CONSTI 32
	WRITEC
	CONSTI 98
	WRITEC
	CONSTI 101
	WRITEC
	CONSTI 32
	WRITEC
	CONSTI 110
	WRITEC
	CONSTI 101
	WRITEC
	CONSTI 103
	WRITEC
	CONSTI 97
	WRITEC
	CONSTI 116
	WRITEC
	CONSTI 105
	WRITEC
	CONSTI 118
	WRITEC
	CONSTI 101
	WRITEC
	CONSTI 46
	WRITEC
	CONSTI 10
	WRITEC
	STOP

ml_sqrt_done
	ADJUST	-4
	RET	0
