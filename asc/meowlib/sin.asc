################################################################################
# sin(x) - find the value of the sine function at value x
################################################################################

# Test
	READR
	CALL	0, ml_sin
	!D
	STOP

ml_sin
	# i, result, power, factorial
	ADJUST	4

	# i = 1
	CONSTR	1.0
	POP	0[0]

	# result = 0
	CONSTR	0.0
	POP	1[0]

	# power = x
	PUSH	-3[0]
	POP	2[0]

	# factorial = 1
	CONSTR	1.0
	POP	3[0]

ml_sin_loop
	# while (i < 25):
	PUSH	0[0]
	CONSTR	25	
	LTR
	IFZ	ml_sin_done

	# result = result + (power / factorial)
	PUSH	1[0]
	PUSH	2[0]
	PUSH	3[0]
	DIVR
	ADDR
	POP	1[0]

	# pow = pow * x * x
	PUSH	2[0]
	PUSH	-3[0]
	PUSH	-3[0]
	MULR
	MULR
	POP	2[0]

	# factorial = factorial * (2*(i+1))*(2*(i+1)+1)
	PUSH	3[0]

	# (2*(i+1))
	CONSTR	2.0
	PUSH	0[0]
	CONSTR	1.0
	ADDR
	MULR
	# (2*(i+1)+1)
	DUP
	CONSTR	1.0
	ADDR
	# (2*(i+1))*(2*(i+1)+1)
	MULR
	# factorial * (2*(i+1))*(2*(i+1)+1)
	MULR
	# factorial = factorial * (2*(i+1))*(2*(i+1)+1)
	POP	3[0]

	# i = i + 1
	PUSH	0[0]
	CONSTR	1.0
	ADDR
	POP	0[0]

	GOTO ml_sin_loop

ml_sin_done
	# retval = result
	PUSH	1[0]
	POP	-3[0]

	ADJUST	-4
	RET	0

