.\" Manpage for pal.
.TH man 8 "18 October 2013" "0.9.0" "pal"
.SH NAME
pal \-\- compiles programs for the PAL programming language.
.SH SYNOPSIS
.B pal 
[
.B -n
]
[
.B -S
]
[
.B -a
] 
[
.B -d
]
[
.B -p
]
[
.B -e
]
[
.B -z
]
[
.I FILE ...
]
.SH DESCRIPTION
Parses a
.B PAL
program and does lexical, syntax, and semantic checks according to the
PAL language specification. It attempts to give useful error messages 
when the input code is incorrect. When the code is correct, the compiler 
will generate assembly code. It generates code for the Asc interpreter, which 
is a simple stack-based machine. The compiler written primarily in C++, and 
uses the Bison and Flex compiler tools. To run the generated Asc code, you
will need a working Asc interpreter.
.SH OPTIONS
.IP -n
Do not produce a program listing. Default is to produce one.
.IP -d
Turns on verbose debugging for Bison.
.IP -S
Leaves Asc code in FILE.asc instead of removing it.
.IP -a
Turns off run-time array bounds checking. Default is to do run-time
array bounds checking.
.IP -p
Prints the output to standard output instead of to the listing file.
Overrides the -n option.
.IP -e
Enables the debugging language extensions of the compiler. The two procedures
that are usable with this option are ascDump() and ascTrace(), both of which
are NOT part of the PAL language standard, are NOT redefinable when the 
option is enabled, and DO NOT check for args.
.IP -z
Do not invoke the Asc interpreter if code is correct. The default is to
invoke the Asc interpreter on the generated code.
.SH EXAMPLES
.B pal FILE  :
Will compile the PAL program in FILE. Will print program listing,
remove Asc code, and do run-time array bounds checking, as per the
default. Will print errors in-line with the program listing. Option -n
will suppress the program listing but not the error messages. Option
-p will send the output to stdout rather than the listing file.

.SH BUGS
None that are known.
.SH AUTHORS
Chris Pavlicek, Connor Moreside, Mike Armstrong, and Steve Jahns
